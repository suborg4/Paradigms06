/**
* Бинарный поиск
*
* ● Контекст
* Предположим, что мы хотим найти элемент в массиве (получить
* его индекс). Мы можем это сделать просто перебрав все элементы.
* Но что, если массив уже отсортирован? В этом случае можно
* использовать бинарный поиск. Принцип прост: сначала берём
* элемент находящийся посередине и сравниваем с тем, который мы
* хотим найти. Если центральный элемент больше нашего,
* рассматриваем массив слева от центрального, а если больше -
* справа и повторяем так до тех пор, пока не найдем наш элемент.
*
* ● Ваша задача
* Написать программу на любом языке в любой парадигме для
* бинарного поиска. На вход подаётся целочисленный массив и
* число. На выходе - индекс элемента или -1, в случае если искомого
* элемента нет в массиве.
*
* Код написан в императивной парадигме программирования используя процедурный стиль программирования
*/

public class BinarySearch {

    public static int binarySearch(int[] arr, int target) {
        int left = 0;
        int right = arr.length - 1;

        while (left <= right) {
            int mid = left + (right - left) / 2;
 
            if (arr[mid] == target) {
                return mid;
            }
            if (arr[mid] > target) {
                right = mid - 1;
            }
            else {
                left = mid + 1;
            }
        }
        return -1;
    }

    public static void main(String[] args) {
        int[] arr = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10};
        int target = 5;
        int result = binarySearch(arr, target);

        if (result != -1) {
            System.out.println("Элемент " + target + " найден в массиве с индексом " + result);
        } else {
            System.out.println("Элемент " + target + " не найден в массиве");
        }
    }
}